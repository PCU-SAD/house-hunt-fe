/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PropertiesImport } from './routes/properties'
import { Route as AuthUserImport } from './routes/_auth-user'
import { Route as AuthOwnerImport } from './routes/_auth-owner'
import { Route as AuthAdminImport } from './routes/_auth-admin'
import { Route as IndexImport } from './routes/index'
import { Route as PropertiesIdImport } from './routes/properties_.$id'
import { Route as AuthOwnerManagePropertiesImport } from './routes/_auth-owner/manage-properties'
import { Route as AuthAdminAdminDashboardImport } from './routes/_auth-admin/admin-dashboard'
import { Route as AuthUserSettingsRouteImport } from './routes/_auth-user/_settings/route'
import { Route as AuthOwnerManagePropertiesAddNewImport } from './routes/_auth-owner/manage-properties_.add-new'
import { Route as AuthOwnerManagePropertiesIdImport } from './routes/_auth-owner/manage-properties_.$id'
import { Route as AuthAdminAdminDashboardIdImport } from './routes/_auth-admin/admin-dashboard_.$id'
import { Route as AuthUserSettingsSettingsAccountImport } from './routes/_auth-user/_settings/settings.account'

// Create/Update Routes

const PropertiesRoute = PropertiesImport.update({
  path: '/properties',
  getParentRoute: () => rootRoute,
} as any)

const AuthUserRoute = AuthUserImport.update({
  id: '/_auth-user',
  getParentRoute: () => rootRoute,
} as any)

const AuthOwnerRoute = AuthOwnerImport.update({
  id: '/_auth-owner',
  getParentRoute: () => rootRoute,
} as any)

const AuthAdminRoute = AuthAdminImport.update({
  id: '/_auth-admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PropertiesIdRoute = PropertiesIdImport.update({
  path: '/properties/$id',
  getParentRoute: () => rootRoute,
} as any)

const AuthOwnerManagePropertiesRoute = AuthOwnerManagePropertiesImport.update({
  path: '/manage-properties',
  getParentRoute: () => AuthOwnerRoute,
} as any)

const AuthAdminAdminDashboardRoute = AuthAdminAdminDashboardImport.update({
  path: '/admin-dashboard',
  getParentRoute: () => AuthAdminRoute,
} as any)

const AuthUserSettingsRouteRoute = AuthUserSettingsRouteImport.update({
  id: '/_settings',
  getParentRoute: () => AuthUserRoute,
} as any)

const AuthOwnerManagePropertiesAddNewRoute =
  AuthOwnerManagePropertiesAddNewImport.update({
    path: '/manage-properties/add-new',
    getParentRoute: () => AuthOwnerRoute,
  } as any)

const AuthOwnerManagePropertiesIdRoute =
  AuthOwnerManagePropertiesIdImport.update({
    path: '/manage-properties/$id',
    getParentRoute: () => AuthOwnerRoute,
  } as any)

const AuthAdminAdminDashboardIdRoute = AuthAdminAdminDashboardIdImport.update({
  path: '/admin-dashboard/$id',
  getParentRoute: () => AuthAdminRoute,
} as any)

const AuthUserSettingsSettingsAccountRoute =
  AuthUserSettingsSettingsAccountImport.update({
    path: '/settings/account',
    getParentRoute: () => AuthUserSettingsRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth-admin': {
      preLoaderRoute: typeof AuthAdminImport
      parentRoute: typeof rootRoute
    }
    '/_auth-owner': {
      preLoaderRoute: typeof AuthOwnerImport
      parentRoute: typeof rootRoute
    }
    '/_auth-user': {
      preLoaderRoute: typeof AuthUserImport
      parentRoute: typeof rootRoute
    }
    '/properties': {
      preLoaderRoute: typeof PropertiesImport
      parentRoute: typeof rootRoute
    }
    '/_auth-user/_settings': {
      preLoaderRoute: typeof AuthUserSettingsRouteImport
      parentRoute: typeof AuthUserImport
    }
    '/_auth-admin/admin-dashboard': {
      preLoaderRoute: typeof AuthAdminAdminDashboardImport
      parentRoute: typeof AuthAdminImport
    }
    '/_auth-owner/manage-properties': {
      preLoaderRoute: typeof AuthOwnerManagePropertiesImport
      parentRoute: typeof AuthOwnerImport
    }
    '/properties/$id': {
      preLoaderRoute: typeof PropertiesIdImport
      parentRoute: typeof rootRoute
    }
    '/_auth-admin/admin-dashboard/$id': {
      preLoaderRoute: typeof AuthAdminAdminDashboardIdImport
      parentRoute: typeof AuthAdminImport
    }
    '/_auth-owner/manage-properties/$id': {
      preLoaderRoute: typeof AuthOwnerManagePropertiesIdImport
      parentRoute: typeof AuthOwnerImport
    }
    '/_auth-owner/manage-properties/add-new': {
      preLoaderRoute: typeof AuthOwnerManagePropertiesAddNewImport
      parentRoute: typeof AuthOwnerImport
    }
    '/_auth-user/_settings/settings/account': {
      preLoaderRoute: typeof AuthUserSettingsSettingsAccountImport
      parentRoute: typeof AuthUserSettingsRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthAdminRoute.addChildren([
    AuthAdminAdminDashboardRoute,
    AuthAdminAdminDashboardIdRoute,
  ]),
  AuthOwnerRoute.addChildren([
    AuthOwnerManagePropertiesRoute,
    AuthOwnerManagePropertiesIdRoute,
    AuthOwnerManagePropertiesAddNewRoute,
  ]),
  AuthUserRoute.addChildren([
    AuthUserSettingsRouteRoute.addChildren([
      AuthUserSettingsSettingsAccountRoute,
    ]),
  ]),
  PropertiesRoute,
  PropertiesIdRoute,
])

/* prettier-ignore-end */
