/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SplatImport } from './routes/$'
import { Route as ApartmentsApartmentsImport } from './routes/_apartments/_apartments'

// Create Virtual Routes

const ApartmentsImport = createFileRoute('/_apartments')()
const IndexLazyImport = createFileRoute('/')()
const SignupIndexLazyImport = createFileRoute('/signup/')()
const PrivacyPolicyIndexLazyImport = createFileRoute('/privacy-policy/')()
const LoginIndexLazyImport = createFileRoute('/login/')()
const HousesIndexLazyImport = createFileRoute('/houses/')()
const ApartmentsApartmentsLazyImport = createFileRoute(
  '/_apartments/apartments',
)()
const ApartmentsApartmentsIdLazyImport = createFileRoute(
  '/_apartments/apartments/$id',
)()

// Create/Update Routes

const ApartmentsRoute = ApartmentsImport.update({
  id: '/_apartments',
  getParentRoute: () => rootRoute,
} as any)

const SplatRoute = SplatImport.update({
  path: '/$',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ApartmentsApartmentsRoute = ApartmentsApartmentsImport.update({
  id: '/_apartments/_apartments',
  getParentRoute: () => ApartmentsRoute,
} as any)

const SignupIndexLazyRoute = SignupIndexLazyImport.update({
  path: '/signup/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup/index.lazy').then((d) => d.Route))

const PrivacyPolicyIndexLazyRoute = PrivacyPolicyIndexLazyImport.update({
  path: '/privacy-policy/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/privacy-policy/index.lazy').then((d) => d.Route),
)

const LoginIndexLazyRoute = LoginIndexLazyImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login/index.lazy').then((d) => d.Route))

const HousesIndexLazyRoute = HousesIndexLazyImport.update({
  path: '/houses/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/houses/index.lazy').then((d) => d.Route))

const ApartmentsApartmentsLazyRoute = ApartmentsApartmentsLazyImport.update({
  path: '/apartments',
  getParentRoute: () => ApartmentsRoute,
} as any).lazy(() =>
  import('./routes/_apartments/apartments.lazy').then((d) => d.Route),
)

const ApartmentsApartmentsIdLazyRoute = ApartmentsApartmentsIdLazyImport.update(
  {
    path: '/$id',
    getParentRoute: () => ApartmentsApartmentsLazyRoute,
  } as any,
).lazy(() =>
  import('./routes/_apartments/apartments.$id.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/$': {
      preLoaderRoute: typeof SplatImport
      parentRoute: typeof rootRoute
    }
    '/_apartments': {
      preLoaderRoute: typeof ApartmentsImport
      parentRoute: typeof rootRoute
    }
    '/_apartments/apartments': {
      preLoaderRoute: typeof ApartmentsApartmentsLazyImport
      parentRoute: typeof ApartmentsImport
    }
    '/houses/': {
      preLoaderRoute: typeof HousesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      preLoaderRoute: typeof LoginIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/privacy-policy/': {
      preLoaderRoute: typeof PrivacyPolicyIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/signup/': {
      preLoaderRoute: typeof SignupIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_apartments/apartments/$id': {
      preLoaderRoute: typeof ApartmentsApartmentsIdLazyImport
      parentRoute: typeof ApartmentsApartmentsLazyImport
    }
    '/_apartments/_apartments': {
      preLoaderRoute: typeof ApartmentsApartmentsImport
      parentRoute: typeof ApartmentsRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  SplatRoute,
  ApartmentsRoute.addChildren([
    ApartmentsApartmentsRoute,
    ApartmentsApartmentsLazyRoute.addChildren([
      ApartmentsApartmentsIdLazyRoute,
    ]),
  ]),
  HousesIndexLazyRoute,
  LoginIndexLazyRoute,
  PrivacyPolicyIndexLazyRoute,
  SignupIndexLazyRoute,
])

/* prettier-ignore-end */
